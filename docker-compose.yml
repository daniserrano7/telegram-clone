version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '8000:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app_network

  server:
    build:
      context: .
      dockerfile: server/Dockerfile
      args:
        NODE_ENV: ${NODE_ENV}
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - PORT=5000
    container_name: server
    ports:
      - '8001:5000'
    depends_on:
      - postgres
    networks:
      - app_network

  web:
    build:
      context: .
      dockerfile: web/Dockerfile
      args:
        NODE_ENV: ${NODE_ENV}
        VITE_API_URL: ${VITE_API_URL}
        VITE_WS_URL: ${VITE_WS_URL}
        VITE_PORT: ${VITE_PORT}
    container_name: web
    ports:
      - '8002: 3000'
    depends_on:
      - server
    networks:
      - app_network
    volumes:
      - web_dist:/app/web/dist

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    volumes:
      - ./.docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - web_dist:/usr/share/nginx/html
    ports:
      - '80:80'
    depends_on:
      - web
      - server
    networks:
      - app_network

networks:
  app_network:
    name: app_network
    driver: bridge
volumes:
  pgdata:
  web_dist:
