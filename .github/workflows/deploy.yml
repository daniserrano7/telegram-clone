name: Deploy to VPS

on:
  push:
    branches: [master]
    paths:
      - 'server/**'
      - 'web/**'
      - 'shared/**'
      - '.github/workflows/deploy.yml'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      server-changed: ${{ steps.changes.outputs.server }}
      web-changed: ${{ steps.changes.outputs.web }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            server:
              - 'server/**'
              - 'shared/**'
              - '.github/workflows/deploy.yml'
            web:
              - 'web/**'
              - 'shared/**'
              - '.github/workflows/deploy.yml'

  deploy-server:
    needs: detect-changes
    if: needs.detect-changes.outputs.server-changed == 'true'
    runs-on: ubuntu-latest
    environment: PROD
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Generate Prisma client
        run: pnpm --filter server prisma generate

      - name: Build server
        run: pnpm --filter server build

      - name: Deploy server to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: 'server/dist,server/package.json,server/prisma,shared'
          target: '/home/deploy/telechat/'
          overwrite: true

      - name: Restart server on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /home/deploy/telechat/server
            pnpm install --prod --frozen-lockfile
            pnpm prisma migrate deploy
            pm2 restart telegram-server || pm2 start npm --name "telegram-server" -- start
            pm2 save

  deploy-web:
    needs: detect-changes
    if: needs.detect-changes.outputs.web-changed == 'true'
    runs-on: ubuntu-latest
    environment: PROD
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build web app
        run: pnpm --filter web build
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          VITE_WS_URL: ${{ secrets.VITE_WS_URL }}
          VITE_PORT: ${{ secrets.VITE_PORT }}

      - name: Deploy web app to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: 'web/dist/*'
          target: '/var/www/telechat/web/'
          overwrite: true
          strip_components: 2

  # Optional: Send notification on successful deployment
  notify:
    needs: [deploy-server, deploy-web]
    if: always() && (needs.deploy-server.result == 'success' || needs.deploy-web.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - name: Send success notification
        run: echo "Deployment completed successfully!"
