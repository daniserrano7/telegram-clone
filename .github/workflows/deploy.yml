name: Deploy to VPS

on:
  push:
    branches: [master]
    paths:
      - 'server/**'
      - 'web/**'
      - 'shared/**'
      - 'deploy-server.sh'
      - 'deploy-web.sh'
      - '.github/workflows/deploy.yml'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      server-changed: ${{ steps.changes.outputs.server }}
      web-changed: ${{ steps.changes.outputs.web }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            server:
              - 'server/**'
              - 'shared/**'
              - 'deploy-server.sh'
            web:
              - 'web/**'
              - 'shared/**'
              - 'deploy-web.sh'

  deploy-server:
    needs: detect-changes
    if: needs.detect-changes.outputs.server-changed == 'true'
    runs-on: ubuntu-latest
    environment: PROD
    steps:
      - uses: actions/checkout@v4

      - name: Deploy server to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /home/deploy/telechat
            git pull origin master
            ./deploy-server.sh

  deploy-web:
    needs: detect-changes
    if: needs.detect-changes.outputs.web-changed == 'true'
    runs-on: ubuntu-latest
    environment: PROD
    steps:
      - uses: actions/checkout@v4

      - name: Deploy web app to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /home/deploy/telechat
            git pull origin master
            ./deploy-web.sh "${{ secrets.VITE_API_URL }}" "${{ secrets.VITE_WS_URL }}" "${{ secrets.VITE_PORT }}"

  # Optional: Send notification on successful deployment
  notify:
    needs: [deploy-server, deploy-web]
    if: always() && (needs.deploy-server.result == 'success' || needs.deploy-web.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - name: Send success notification
        run: echo "Deployment completed successfully!"
